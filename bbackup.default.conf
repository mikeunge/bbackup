##########################################################
#                                                        #
#  This is the configuration file used by 'bbackup.sh'   #
#                                                        #
#  When using bbackup.sh, delete the '.default' part     #
#  from the config file and change to real data.         #
#  eg. bbackup.default.conf -> bbackup.conf              # 
#                                                        # 
#  The default config path is /etc/bbackup.conf          #
#                                                        #
##########################################################
#              Storage server authentication             #
##########################################################
#
# Define the username and password.
# These credentials are then used for authentication.
#
export USER="share_user"
export PASSWORD="share_password"

##########################################################
#                   E-Mail information                   #
##########################################################
#
# Set the name of the sender and the destination e-mail.
# Define the mail_client you want to use.
# For now you can choose between:
#   :: sendmail
#   :: mail
#   :: mutt
#   :: null/none/nil => disables the e-mail functionality
#
export SENDER="MÃ¼ller Server"
export DEST_EMAIL="status@mailserver.com"
export MAIL_CLIENT="sendmail"

##########################################################
#           Network and mounting information             #
##########################################################
#
# These values are the MOST important!
# Make sure the share exists and is available and also create the mounting point.
# The mounting point should be equal the destination in the rsnapshot.conf file, if not, you will have trouble executing the script properly.
# You can toggle if the script should mount a network share or not, just change the MOUNT_ENABLED to 0 and it'll get
# skipped.
#
export SHARE="//192.168.0.100/Backup"
export MOUNT="/mnt/server/"
export MOUNT_ENABLED=1
#
# You can define a second backup job with a different  network drive to be mounted.
# The script will check if the passed argument is the same value as the SEC_JOB value.
# If the values are the same, the SEC_SHARE is going to be set as the main share to use.
# This can be very helpfull if you want to execute a different kind of backup without touching the rsnapshot configuration file.
#
export SEC_JOB="monthly"
export SEC_SHARE="//192.168.0.100/Backup2"

##########################################################
#                  Backup configuration                  #
##########################################################
#
# This changes the workflow and behaviour of the backup script.
# Define the tries on failure, the default job to execute and the rsnapshot execution path.
# To find your rsnapshot path type => "which rsnapshot".
#
#
# Compresion feature description:
#
# The feature gets activate when the "COMPRESS" value is set to 1.
# Everything that starts with "COMP_*" enables/disables a different feature.
# COMP_DEL => is the DELIMITER used for splitting the string.
# COMP_SRC => defines the source(s) what the script takes as input.
# COMP_TMP => all the files/folders are going to be stored in here.
# COMP_REM => set this flag if the script should delete existing files in the COMP_TMP path.
# COMP_MOD => change the compression mode (tar, bz2|bzip2, gz|gzip, lzma). (default: bz2)
# COMP_LVL => define the compression level; will only take action if COMP_MOD is not tar! (default: 3)
#
export TRIES=3
export JOB="daily"
export RSNAPSHOT="/usr/bin/rsnapshot"
export COMPRESS=0
export COMP_DEL=";"
export COMP_SRC="/etc/;/home/;/var/log/"
export COMP_TMP="/tmp/bbackup/"
export COMP_REM=1
export COMP_MOD="bz2"
export COMP_LVL=4

##########################################################
#                  Logging information                   #
##########################################################
#
# All the information in here is used for logging.
# Change the LOG_ENABLE flag to 0 if you want console output, else (1) enables file logging.
# You can change the LOG_LEVEL to be DEBUG, INFO, WARNING or ERROR.
# Set the logfile location to a different then /var/log/ or toggle the log_rotate.
# The log_rotate is looking for any existing logfiles and if they exist they are going to be deleted.
# This way it produces a much cleaner and smaller logfile that then can be sent via mail.
# If you don't need/want this, set the value to 0.
#
# LOG_LEVEL(s)
#       :: DEBG => DEBUG
#       :: INFO => INFO
#       :: WARN => WARNING
#       :: ERRO => ERROR
#
export LOG_ROTATE=1
export LOG_ENABLE=1
export LOG_LEVEL="INFO"
export LOG_FILE="/var/log/bbackup.log"
export RSNAPSHOT_LOG_FILE="/var/log/rsnapshot.log"
